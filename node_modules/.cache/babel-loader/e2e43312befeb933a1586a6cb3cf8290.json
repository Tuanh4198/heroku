{"ast":null,"code":"import _slicedToArray from\"E:/Tuanh/React Js/project_1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import'./App.css';import{useSelector,useDispatch}from\"react-redux\";import{fetchWeather}from\"./redux/actions/fetchWeather\";import data from\"./state.json\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),city=_useState2[0],setCity=_useState2[1];var weatherSelector=useSelector(function(state){return state.weatherinfor;});var dispatch=useDispatch();var getWeatherInfoAction=function getWeatherInfoAction(city){return dispatch(fetchWeather(city));};useEffect(function(){getWeatherInfoAction(\"1581129\");},[]);var getWeatherInfor=function getWeatherInfor(e){e.preventDefault();if(city===\"\"){console.log('no city to search for');}else{getWeatherInfoAction(city);}};var detailWeather=\"\";if(weatherSelector.name){detailWeather=/*#__PURE__*/_jsx(\"div\",{className:\"container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"weather-side\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"weather-gradient\"}),/*#__PURE__*/_jsx(\"div\",{className:\"date-container\",children:/*#__PURE__*/_jsxs(\"strong\",{className:\"location\",children:[weatherSelector.name,\", \",weatherSelector.sys.country]})}),/*#__PURE__*/_jsx(\"div\",{className:\"weather-container\",children:/*#__PURE__*/_jsxs(\"h3\",{className:\"weather-temp\",children:[(weatherSelector.main.temp/13.2).toFixed(2),\"\\xB0C\"]})}),/*#__PURE__*/_jsx(\"div\",{className:\"info-side\",children:/*#__PURE__*/_jsx(\"div\",{className:\"today-info-container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"today-info\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"precipitation\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"title\",children:\"CLOUDS\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"value\",children:[weatherSelector.clouds.all,\" %\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"clear\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"humidity\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"title\",children:\"HUMIDITY\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"value\",children:[weatherSelector.main.humidity,\" %\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"clear\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"wind\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"title\",children:\"WIND\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"value\",children:[weatherSelector.wind.speed,\" km/h - \",weatherSelector.wind.deg,\" Deg\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"clear\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"wind\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"title\",children:\"VISIBILITY\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"value\",children:[weatherSelector.visibility,\" m\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"clear\"})]})]})})})]})});}else{/*#__PURE__*/_jsx(\"div\",{className:\"details\",children:\" You need to choose state. \"});}return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-white\",children:/*#__PURE__*/_jsx(\"center\",{children:\"REACT-REDUX WEATHER APP\"})}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"form\",{onSubmit:getWeatherInfor,children:/*#__PURE__*/_jsx(\"div\",{className:\"form-row\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"btn-group col-12 justify-content-between align-items-center\",children:[/*#__PURE__*/_jsxs(\"select\",{id:\"inputState\",className:\"form-control col-7 bg-dark text-white\",value:city,onChange:function onChange(e){return setCity(e.target.value);},children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Choose State\"}),data.map(function(val){return/*#__PURE__*/_jsx(\"option\",{value:val.id,children:val.name},val.id);})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"btn-dark col-4 btn-md location-button\",children:\"Check\"})]})})}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),detailWeather]});}export default App;","map":{"version":3,"sources":["E:/Tuanh/React Js/project_1/src/App.js"],"names":["React","useState","useEffect","useSelector","useDispatch","fetchWeather","data","App","city","setCity","weatherSelector","state","weatherinfor","dispatch","getWeatherInfoAction","getWeatherInfor","e","preventDefault","console","log","detailWeather","name","sys","country","main","temp","toFixed","clouds","all","humidity","wind","speed","deg","visibility","target","value","map","val","id"],"mappings":"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","sourcesContent":["import React, { useState,useEffect } from 'react';\nimport './App.css';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { fetchWeather } from \"./redux/actions/fetchWeather\";\nimport data from \"./state.json\";\n\nfunction App() {\n  const [city, setCity] = useState(\"\");\n\n  const weatherSelector = useSelector((state) => state.weatherinfor);\n\n  const dispatch = useDispatch();\n  const getWeatherInfoAction = (city) => dispatch(fetchWeather(city));\n  \n  useEffect(() => {\n    getWeatherInfoAction(\"1581129\")\n  }, [])\n\n  const getWeatherInfor = (e) => {\n    e.preventDefault();\n\n    if (city === \"\") {\n      console.log('no city to search for');\n    } else {\n      getWeatherInfoAction(city)\n    }\n\n  };\n\n  let detailWeather = \"\";\n\n  if (weatherSelector.name) {\n    detailWeather = (\n<div className=\"container\">\n  <div className=\"weather-side\">\n    <div className=\"weather-gradient\" />\n    <div className=\"date-container\">\n      <strong className=\"location\">{weatherSelector.name}, {weatherSelector.sys.country}</strong>\n    </div>\n    <div className=\"weather-container\">\n      <h3 className=\"weather-temp\">{(weatherSelector.main.temp/13.2).toFixed(2)  }Â°C</h3>\n    </div>\n    <div className=\"info-side\">\n      <div className=\"today-info-container\">\n        <div className=\"today-info\">\n          <div className=\"precipitation\"> \n            <span className=\"title\">CLOUDS</span><span className=\"value\">{weatherSelector.clouds.all} %</span>\n            <div className=\"clear\" />\n          </div>\n          <div className=\"humidity\"> \n            <span className=\"title\">HUMIDITY</span><span className=\"value\">{weatherSelector.main.humidity} %</span>\n            <div className=\"clear\" />\n          </div>\n          <div className=\"wind\"> \n            <span className=\"title\">WIND</span><span className=\"value\">{weatherSelector.wind.speed} km/h - {weatherSelector.wind.deg} Deg</span>\n            <div className=\"clear\"/>\n          </div>\n          <div className=\"wind\"> \n            <span className=\"title\">VISIBILITY</span><span className=\"value\">{weatherSelector.visibility} m</span>\n            <div className=\"clear\"/>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n    )\n  } else {\n    <div className=\"details\"> You need to choose state. </div>\n  }\n  \n  return (\n    <div className=\"App\">\n      <h3 className=\"text-white\"><center>REACT-REDUX WEATHER APP</center></h3>\n      <br/>\n      <form onSubmit={getWeatherInfor}>\n        <div className=\"form-row\">\n          <div className=\"btn-group col-12 justify-content-between align-items-center\">\n            <select id=\"inputState\" className=\"form-control col-7 bg-dark text-white\" value={city} onChange={e => setCity(e.target.value)}>\n              <option value=\"\">Choose State</option>\n              {\n                data.map(val => {\n                  return (\n                    <option value={val.id} key={val.id}>{val.name}</option>\n                  )\n                })\n              }\n            </select>\n            <button type=\"submit\" className=\"btn-dark col-4 btn-md location-button\" >Check</button>\n          </div>\n        </div>\n      </form>\n\n      <br/>\n      <br/>\n      \n      { detailWeather }\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}